<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>offendex</Title>
			<Shortcut>offendex</Shortcut>
			<Description>Code snippet to add an exception that inherits from OffendingException.</Description>
			<Author>César Andrés Morgan</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>exname</ID>
					<ToolTip>Exception name</ToolTip>
					<Default>MyOffending</Default>
				</Literal>
				<Literal>
					<ID>exdesc</ID>
					<ToolTip>Exception description</ToolTip>
					<Default>an invalid value.</Default>
				</Literal>
				<Literal>
					<ID>extype</ID>
					<ToolTip>Type of the exception</ToolTip>
					<Default>object</Default>
				</Literal>
				<Literal>
					<ID>exparam</ID>
					<ToolTip>Name of the exception parameter</ToolTip>
					<Default>offendingValue</Default>
				</Literal>
				<Literal>
					<ID>exparamdesc</ID>
					<ToolTip>Description of the exception parameter</ToolTip>
					<Default>Value that caused the exception</Default>
				</Literal>
			</Declarations>
			<Code Language="csharp">
				<![CDATA[
    /// <summary>
    /// Exception that occurs when $exdesc$.
    /// </summary>
    [Serializable]
    public class $exname$Exception : OffendingException<$extype$>
    {
        static string Msg() => "$end$";
        static string Msg($extype$ $exparam$) => "";

        /// <summary>
        /// Initializes a new instance of the 
        /// <see cref="$exname$Exception"/> class.
        /// </summary>
        /// <param name="context">
        /// The <see cref="StreamingContext"/> that contains contextual
        /// information about the source or destination.
        /// </param>
        /// <param name="info">
        /// The <see cref="SerializationInfo"/> that contains the serialized
        /// information about the object regarding the exception being
        /// thrown.
        /// </param>
        protected $exname$Exception(SerializationInfo info, StreamingContext context) : base(info, context) { }

        /// <summary>
        /// Initializes a new instance of the 
        /// <see cref="$exname$Exception"/> class.
        /// </summary>
        /// <param name="context">
        /// The <see cref="StreamingContext"/> that contains contextual
        /// information about the source or destination.
        /// </param>
        /// <param name="info">
        /// The <see cref="SerializationInfo"/> that contains the serialized
        /// information about the object regarding the exception being
        /// thrown.
        /// </param>
        /// <param name="$exparam$">
        /// $exparamdesc$.
        /// </param>
        protected $exname$Exception(SerializationInfo info, StreamingContext context, $extype$ $exparam$) : base(info, context, $exparam$) { }

        /// <summary>
        /// Initializes a new instance of the
        /// <see cref="$exname$Exception"/> class.
        /// </summary>
        public $exname$Exception() : base(Msg()) { }

        /// <summary>
        /// Initializes a new instance of the
        /// <see cref="$exname$Exception"/> class.
        /// </summary>
        /// <param name="$exparam$">
        /// $exparamdesc$.
        /// </param>
        public $exname$Exception($extype$ $exparam$) : base(Msg($exparam$), $exparam$) { }

        /// <summary>
        /// Initializes a new instance of the
        /// <see cref="$exname$Exception"/> class.
        /// </summary>
        /// <param name="message">
        /// A <see cref="string"/> that describes the exception.
        /// </param>
        public $exname$Exception(string message) : base(message) { }

        /// <summary>
        /// Initializes a new instance of the
        /// <see cref="$exname$Exception"/> class.
        /// </summary>
        /// <param name="message">
        /// A <see cref="string"/> that describes the exception.
        /// </param>
        /// <param name="$exparam$">
        /// $exparamdesc$.
        /// </param>
        public $exname$Exception(string message, $extype$ $exparam$) : base(message, $exparam$) { }

        /// <summary>
        /// Initializes a new instance of the
        /// <see cref="$exname$Exception"/> class.
        /// </summary>
        /// <param name="inner">
        /// <see cref="Exception"/> that is the cause of this exception.
        /// </param>
        public $exname$Exception(Exception inner) : base(Msg(), inner) { }

        /// <summary>
        /// Initializes a new instance of the
        /// <see cref="$exname$Exception"/> class.
        /// </summary>
        /// <param name="inner">
        /// <see cref="Exception"/> that is the cause of this exception.
        /// </param>
        /// <param name="$exparam$">
        /// $exparamdesc$.
        /// </param>
        public $exname$Exception(Exception inner, $extype$ $exparam$) : base(Msg($exparam$), inner, $exparam$) { }

        /// <summary>
        /// Initializes a new instance of the
        /// <see cref="$exname$Exception"/> class.
        /// </summary>
        /// <param name="message">
        /// A <see cref="string"/> that describes the exception.
        /// </param>
        /// <param name="inner">
        /// <see cref="Exception"/> that is the cause of this exception.
        /// </param>
        public $exname$Exception(string message, Exception inner) : base(message, inner) { }

        /// <summary>
        /// Initializes a new instance of the
        /// <see cref="$exname$Exception"/> class.
        /// </summary>
        /// <param name="message">
        /// A <see cref="string"/> that describes the exception.
        /// </param>
        /// <param name="inner">
        /// <see cref="Exception"/> that is the cause of this exception.
        /// </param>
        /// <param name="$exparam$">
        /// $exparamdesc$.
        /// </param>
        public $exname$Exception(string message, Exception inner, $extype$ $exparam$) : base(message, inner, $exparam$) { }
    }
]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>
