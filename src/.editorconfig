[*.cs]

file_header_template = {fileName}\n\nThis file is part of Morgan's CLR Advanced Runtime (MCART)\n\nAuthor(s):\n     César Andrés Morgan <xds_xps_ivx@hotmail.com>\n\nReleased under the MIT License (MIT)\nCopyright © 2011 - 2024 César Andrés Morgan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the “Software”), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.

# IDE0011: Agregar llaves
csharp_prefer_braces = when_multiline:silent

# IDE0022: Usar cuerpo del bloque para los métodos
csharp_style_expression_bodied_methods = when_on_single_line:silent

# CA1305: Especificar IFormatProvider
dotnet_diagnostic.CA1305.severity = none

# IDE0022: Usar cuerpo de expresiones para los métodos
dotnet_diagnostic.IDE0022.severity = none

csharp_style_expression_bodied_constructors = false:silent

csharp_style_expression_bodied_operators = false:silent

csharp_style_expression_bodied_properties = true:silent

csharp_style_expression_bodied_indexers = true:silent

csharp_style_expression_bodied_accessors = true:silent

csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion

csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion

csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent

csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:suggestion

csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent

csharp_prefer_simple_using_statement = true:suggestion

csharp_style_namespace_declarations = block_scoped:silent

csharp_style_prefer_switch_expression = true:suggestion

csharp_style_prefer_pattern_matching = true:silent

csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion

csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

csharp_style_prefer_not_pattern = true:suggestion

csharp_style_prefer_extended_property_pattern = true:suggestion

csharp_style_conditional_delegate_call = true:suggestion

csharp_using_directive_placement = outside_namespace:silent


[*.{cs,vb}]

end_of_line = crlf

dotnet_style_allow_multiple_blank_lines_experimental = false:suggestion

dotnet_style_allow_statement_immediately_after_block_experimental = true:silent

dotnet_style_readonly_field = true:suggestion

dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent
dotnet_code_quality_unused_parameters = all:suggestion
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent

[*.cs]

#### Estilos de nomenclatura ####



# Reglas de nomenclatura



dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion

dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface

dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i



dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion

dotnet_naming_rule.types_should_be_pascal_case.symbols = types

dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case



dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion

dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members

dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case



# Especificaciones de símbolos



dotnet_naming_symbols.interface.applicable_kinds = interface

dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.interface.required_modifiers = 



dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum

dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.types.required_modifiers = 



dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method

dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.non_field_members.required_modifiers = 



# Estilos de nomenclatura



dotnet_naming_style.begins_with_i.required_prefix = I

dotnet_naming_style.begins_with_i.required_suffix = 

dotnet_naming_style.begins_with_i.word_separator = 

dotnet_naming_style.begins_with_i.capitalization = pascal_case



dotnet_naming_style.pascal_case.required_prefix = 

dotnet_naming_style.pascal_case.required_suffix = 

dotnet_naming_style.pascal_case.word_separator = 

dotnet_naming_style.pascal_case.capitalization = pascal_case



dotnet_naming_style.pascal_case.required_prefix = 

dotnet_naming_style.pascal_case.required_suffix = 

dotnet_naming_style.pascal_case.word_separator = 

dotnet_naming_style.pascal_case.capitalization = pascal_case

csharp_prefer_static_local_function = true:suggestion
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_space_around_binary_operators = before_and_after
csharp_indent_labels = one_less_than_current
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = false:silent
csharp_style_var_elsewhere = false:silent



[*.vb]

#### Estilos de nomenclatura ####



# Reglas de nomenclatura



dotnet_naming_rule.interface_should_be_empieza_por_i.severity = suggestion

dotnet_naming_rule.interface_should_be_empieza_por_i.symbols = interface

dotnet_naming_rule.interface_should_be_empieza_por_i.style = empieza_por_i



dotnet_naming_rule.tipos_should_be_pascal_case.severity = suggestion

dotnet_naming_rule.tipos_should_be_pascal_case.symbols = tipos

dotnet_naming_rule.tipos_should_be_pascal_case.style = pascal_case



dotnet_naming_rule.miembros_que_no_son_un_campo_should_be_pascal_case.severity = suggestion

dotnet_naming_rule.miembros_que_no_son_un_campo_should_be_pascal_case.symbols = miembros_que_no_son_un_campo

dotnet_naming_rule.miembros_que_no_son_un_campo_should_be_pascal_case.style = pascal_case



# Especificaciones de símbolos



dotnet_naming_symbols.interface.applicable_kinds = interface

dotnet_naming_symbols.interface.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected

dotnet_naming_symbols.interface.required_modifiers = 



dotnet_naming_symbols.tipos.applicable_kinds = class, struct, interface, enum

dotnet_naming_symbols.tipos.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected

dotnet_naming_symbols.tipos.required_modifiers = 



dotnet_naming_symbols.miembros_que_no_son_un_campo.applicable_kinds = property, event, method

dotnet_naming_symbols.miembros_que_no_son_un_campo.applicable_accessibilities = public, friend, private, protected, protected_friend, private_protected

dotnet_naming_symbols.miembros_que_no_son_un_campo.required_modifiers = 



# Estilos de nomenclatura



dotnet_naming_style.empieza_por_i.required_prefix = I

dotnet_naming_style.empieza_por_i.required_suffix = 

dotnet_naming_style.empieza_por_i.word_separator = 

dotnet_naming_style.empieza_por_i.capitalization = pascal_case



dotnet_naming_style.pascal_case.required_prefix = 

dotnet_naming_style.pascal_case.required_suffix = 

dotnet_naming_style.pascal_case.word_separator = 

dotnet_naming_style.pascal_case.capitalization = pascal_case



dotnet_naming_style.pascal_case.required_prefix = 

dotnet_naming_style.pascal_case.required_suffix = 

dotnet_naming_style.pascal_case.word_separator = 

dotnet_naming_style.pascal_case.capitalization = pascal_case

