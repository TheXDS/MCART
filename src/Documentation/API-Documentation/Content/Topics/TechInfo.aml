<?xml version="1.0" encoding="utf-8"?>
<topic id="8e4ca775-621e-4350-ba47-40c623732add" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <autoOutline/>
      <para>
        En este artículo, se detallan algunas consideraciones técnicas al
        trabajar en MCART. Para un eficiente flujo de trabajo, por favor, lee
        todo este documento.
      </para>
    </introduction>
    <section address="PrjDef">
      <title>Creando nuevos proyectos</title>
      <content>
        <para>
          Los proyectos comparten un conjunto de constantes de compilación. Debido a
          algunas limitaciones presentadas por Visual Studio, no existe un editor visual
          de estas configuraciones, y no existe un mecanismo elegante para administrar
          las configuraciones globales. Por ende, es necesario agregar el siguiente nodo
          a la definición de cada proyecto:
        </para>
        <codeReference>TechInfo#PrjDef</codeReference>
        <para>
          Al agregar este bloque de código a los proyectos, es posible cambiar las
          constantes de compilación globales editando el archivo
          <legacyItalic>CommonSettings.targets</legacyItalic>.
        </para>
        <alert>
          <para>
            Las constantes aplicables al proyecto deben definirse antes de
            agregar este nodo a la definición dle proyecto, para evitar que Visual Studio
            copie las constantes globales al archivo del proyecto.
          </para>
        </alert>
      </content>
    </section>
    <section address="VerNums">
      <title>Números de versión</title>
      <content>
        <para>
          La información genérica de los ensamblados de MCART se encuentra en
          el proyecto compartido <legacyItalic>AssemblyInfo</legacyItalic>, el
          cual contiene únicamente un archivo con las respectivas definiciones
          de atributos de versión, copyright, compañía, trademark y nombre del
          producto. Al crear nuevos proyectos, es necesario incluir una
          referencia a este proyecto para evitar mantener copias innecesarias
          de los atributos, y centralizar la información de versiones y de
          identificación.
        </para>
        <para>
          Durante la fase Pre-release de MCART, la versión mayor tendrá un valor de cero,
          siendo necesario referirse al componente menor para evaluar el estado de avance
          del proyecto. Eventualmente, al existir un Release, el comportamiento de los
          distintos números que componen la versión pasará a representar el estado de
          manera normal.
        </para>
        <para>
          Luego de ocurrir un Release final, los últimos componentes pasarán a ser la
          fecha codificada de compilación de los ensamblados.
        </para>
        <alert>
          <para>
            Debido a la forma en la que dichos atributos se encuentran
            almacenados en un proyecto de este tipo, será necesario actualizar
            manualmente la información de ensamblado de
            <legacyItalic>NetStandard</legacyItalic> al compilar. Por favor, no
            olvides realizar estos cambios y recompilar
            <legacyItalic>NetStandard</legacyItalic> por separado.
          </para>
        </alert>
      </content>
    </section>
    <section address="CompilationConstants">
      <title>Constantes globales de compilación</title>
      <content>
        <para>
          El archivo <legacyItalic>CommonSettings.targets</legacyItalic>
          contiene un conjunto de constantes de
          compilación definidas para toda la solución. Esto, con el propósito de evitar
          los problemas que pueden surgir al configurar individualmente cada proyecto, y
          permitir compartir eficientemente dichas constantes.
        </para>
        <para>
          La siguiente tabla incluye las constantes existentes y el efecto que producen
          al activarse:
        </para>
        <table>
          <tableHeader>
            <row>
              <entry>
                <para>Constante</para>
              </entry>
              <entry>
                <para>Efecto</para>
              </entry>
            </row>
          </tableHeader>
          <row>
            <entry>
              <para>AntiFreeze</para>
            </entry>
            <entry>
              <para>
                Habilita a las funciones que así lo permitan eventualmente
                detener una enumeración potencialmente infinita cuando esta
                haya sido mal utilizada.
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>BufferedIO</para>
            </entry>
            <entry>
              <para>
                Algunas funciones de entrada/salida incluyen una
                implementación opcional con búffer. Activar esta opción
                habilita las lecturas y escrituras con búffer.
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>ExtrasBuiltIn</para>
            </entry>
            <entry>
              <para>
                Incluir en el ensamblado de MCART ejemplos e implementaciones
                estándar básicas de las interfaces o clases abstractas para las
                cuales se pueda proveer.
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>FloatDoubleSpecial</para>
            </entry>
            <entry>
              <para>
                <codeInline>float</codeInline> y
                <codeInline>double</codeInline> son tipos numéricos que pueden
                contener valores especiales, como ser NaN o infinito. Al
                activar esta constante, se habilitan métodos especiales que
                pueden trabajar con estos valores.
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>NativeNumbers</para>
            </entry>
            <entry>
              <para>
                Permite utilizar implementaciones conscientes de la cultura
                nativa para algunas funciones que trabajan con símbolos
                numéricos, utilizando los dígitos numéricos locales.
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>PreferExceptions</para>
            </entry>
            <entry>
              <para>
                Cuando ciertas funciones deban manejar información inválida,
                activar esta constante causa que se arrojen excepciones en 
                lugar de continuar con código alternativo (activar esta bandera
                puede ser un dolor de cabeza, pero resulta en código más
                seguro).
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>RatherDRY</para>
            </entry>
            <entry>
              <para>
                Indica que, a pesar de disminuir la optimización del código, se
                debe respetar el principio DRY (Don't Repeat Yourself) al
                implementar sobrecargas cuyo cuerpo sea exactamente igual.
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>StrictMCARTVersioning</para>
            </entry>
            <entry>
              <para>
                Cuando se realicen comprobaciones de compatibilidad con MCART,
                activar esta constante causa que dichas comprobaciones sean más
                estrictas. Se recomienda mantener esta constante habilitada.
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>SaferPasswords</para>
            </entry>
            <entry>
              <para>
                Permite que algunas funciones de seguridad requieran,
                comprueben o generen contraseñas más seguras, a expensas de
                compatibilidad con los métodos de entrada disponibles o con el
                equipo.
              </para>
            </entry>
          </row>
          <row>
            <entry>
              <para>CheckDanger</para>
            </entry>
            <entry>
              <para>
                Obliga a las funciones que lo permitan a limitar el uso de 
                clases o funciones peligrosas (marcadas con el atributo
                `DangerousAttribute`)
              </para>
            </entry>
          </row>
        </table>
      </content>
    </section>
    <section address="SpecConsiderations">
      <title>Consideraciones especiales</title>
      <content>
        <para>A continuación, se listan una serie de consideraciones especiales para cada uno de los proyectos definidos.</para>        
      </content>
      <sections>
        <section address="SpecGtk">
          <title>Gtk</title>
          <content>
            <para>
              Debido a las limitadas herramientas disponibles para trabajar con proyectos
              basados en Gtk, algunas tareas deben ser realizadas manualmente, indistintamente
              del entorno de desarrollo o el IDE utilizado.
            </para>
            <para>
              Anteriormente, Gtk fue basado en Gtk# 2, por lo que era posible editar la
              interfaz gráfica utilizando el editor integrado en MonoDevelop y Xamarin Studio,
              Stetic. Ahora, Gtk se basa en Gtk# 3, por lo que este editor no se encuentra
              disponible. Para diseñar la interfaz gráfica, se utiliza Glade, y los archivos
              resultantes son almacenados junto a su archivo de código. Algunas convenciones
              son muy importantes para lograr que todo funcione bien:              
            </para>
            <list class="bullet">
              <listItem>
                <para>
                  La ruta del archivo .glade debe coincidir con el nombre
                  completo del tipo del Widget/ventana asociado (es decir, debe
                  coincidir con la ruta de espacios de nombre).
              </para>
              </listItem>
              <listItem>
                <para>
                  El nivel superior del Widget/ventana en el archivo .glade
                  debe tener como Id el nombre del tipo del Widget/ventana 
                  asociado.
                </para>
              </listItem>
              <listItem>
                <para>
                  La opción de compilación del archivo .glade debe establecerse
                  en EmbeddedResource.
                </para>
              </listItem>
              <listItem>
                <para>
                  El código asociado al Widget/ventana debe contener una
                  plantilla como la siguente:
                </para>
                <codeReference>TechInfo#GtkNewWidgets</codeReference>
              </listItem>
            </list>
          </content>
        </section>
      </sections>
      </section>
    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>