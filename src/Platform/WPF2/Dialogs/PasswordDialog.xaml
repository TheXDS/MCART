<Window
    x:Class="TheXDS.MCART.Dialogs.PasswordDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:password="clr-namespace:TheXDS.MCART.Security.Password"
    xmlns:controls="clr-namespace:TheXDS.MCART.Controls"
    xmlns:converters="clr-namespace:System.Windows.Converters"
    xmlns:resources="clr-namespace:TheXDS.MCART.Resources"
    xmlns:viewModel="clr-namespace:TheXDS.MCART.Dialogs.ViewModel"
    d:DataContext="{d:DesignInstance viewModel:PasswordDialogViewModel}"
    mc:Ignorable="d"
    Width="300"
    Title="{Binding Title}" SizeToContent="Height">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="Bool2Vis"></BooleanToVisibilityConverter>
        <converters:BooleanToInvVisibilityConverter x:Key="Bool2InvVis"></converters:BooleanToInvVisibilityConverter>
        <converters:BooleanInverter x:Key="Inv"/>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="PasswordChar" Value="●"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <converters:HealthBrushConverter x:Key="HealthValue"/>
    </Window.Resources>
    <Grid>
        <StackPanel Margin="5" IsEnabled="{Binding IsBusy, Converter={StaticResource Inv}}">
            <TextBlock
                Visibility="{Binding IsUserVisible, Mode=OneWay, Converter={StaticResource Bool2Vis}}"
                Text="{x:Static resources:InternalStrings.User}"/>
            <TextBox
                Visibility="{Binding IsUserVisible, Converter={StaticResource Bool2Vis}}"
                Text="{Binding User}"/>
            <TextBlock Text="{x:Static resources:InternalStrings.Password}"/>
            <Grid Margin="0,0,5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <PasswordBox HorizontalAlignment="Stretch" x:Name="TxtPassword" Margin="5,5,0,5" PasswordChanged="TxtPassword_OnPasswordChanged"/>
                <ToggleButton
                    Visibility="{Binding IsGeneratorVisible, Converter={StaticResource Bool2Vis}}"
                    VerticalAlignment="Center"
                    x:Name="BtnGenerate"
                    Grid.Column="1">🔑</ToggleButton>
                <Popup IsOpen="{Binding IsChecked, ElementName=BtnGenerate}" Placement="Right">
                    <Border BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                        <StackPanel Margin="5">
                            <ComboBox 
                                SelectedValuePath="Value"
                                DisplayMemberPath="Key"
                                SelectedValue="{Binding Generator}"
                                ItemsSource="{x:Static password:Generators.List}" Margin="5"/>
                            <UniformGrid HorizontalAlignment="Center" Rows="1">
                                <Button Click="BtnReGen_OnClick">⭮</Button>
                                <Button Click="BtnToClipboard_OnClick">📋</Button>
                                <Button Click="BtnOkGen_OnClick">✔</Button>
                                <Button Click="BtnCancelGen_OnClick">❌</Button>
                            </UniformGrid>
                            <TextBlock
                                TextAlignment="Center"
                                Width="180"
                                Text="{Binding GeneratedPassword, Mode=OneWay}"
                                FontSize="14"
                                FontFamily="Times New Roman"/>
                        </StackPanel>
                    </Border>
                </Popup>
                <Button 
                    Visibility="{Binding IsGeneratorVisible, Converter={StaticResource Bool2InvVis}}"
                    IsEnabled="{Binding IsInvalid, Converter={StaticResource Inv}}" 
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    IsDefault="True"
                    Margin="0"
                    Click="BtnOk_OnClick">➜</Button>
            </Grid>
            <TextBlock
                Visibility="{Binding IsConfirmVisible, Converter={StaticResource Bool2Vis}}"
                Text="{x:Static resources:InternalStrings.ConfirmPassword}"/>
            <PasswordBox x:Name="TxtConfirm" Visibility="{Binding IsConfirmVisible, Converter={StaticResource Bool2Vis}}" PasswordChanged="TxtConfirm_OnPasswordChanged"/>
            <TextBlock
                Visibility="{Binding IsHintVisible, Converter={StaticResource Bool2Vis}}"
                Text="{x:Static resources:InternalStrings.PasswordHint}"/>
            <TextBox Visibility="{Binding IsHintVisible, Converter={StaticResource Bool2Vis}}" Text="{Binding Hint}"/>
            <DockPanel Margin="5" Visibility="{Binding IsSecurityVisible, Converter={StaticResource Bool2Vis}}">
                <controls:ProgressRing
                    TextFormat="{}{0:f0}%" MaxWidth="72" MaxHeight="72" Thickness="5"
                    Fill="{Binding PasswordQuality, Converter={StaticResource HealthValue}}"
                    Value="{Binding PasswordQuality}"/>
                <TextBlock Margin="10,0,0,0" TextWrapping="WrapWithOverflow" Text="{Binding MorInfo}"/>
            </DockPanel>
            <controls:StretchyWrapPanel
                StretchProportionally="False"
                Visibility="{Binding IsConfirmVisible, Converter={StaticResource Bool2Vis}}">
                <Button IsEnabled="{Binding IsInvalid, Converter={StaticResource Inv}}" Content="{x:Static resources:Strings.OK}" Click="BtnOk_OnClick"/>
                <Button Content="{x:Static resources:Strings.Cancel}" IsCancel="True"/>
            </controls:StretchyWrapPanel>
        </StackPanel>
        <controls:BusyIndicator Visibility="{Binding IsBusy, Converter={StaticResource Bool2Vis}}"/>
    </Grid>
</Window>
